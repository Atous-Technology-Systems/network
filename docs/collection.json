{
  "info": {
    "name": "ATous Secure Network API Collection",
    "description": "Collection completa para testar todas as funcionalidades do sistema ATous Secure Network via endpoints REST e WebSockets. Esta collection inclui todos os endpoints dispon√≠veis na aplica√ß√£o, com exemplos de payloads, testes automatizados e documenta√ß√£o detalhada.",
    "version": "3.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string",
      "description": "URL base do servidor ATous Secure Network"
    },
    {
      "key": "api_key",
      "value": "your-api-key-here",
      "type": "string",
      "description": "Chave de API para autentica√ß√£o (se necess√°rio)"
    },
    {
      "key": "jwt_token",
      "value": "your-jwt-token-here",
      "type": "string",
      "description": "Token JWT para autentica√ß√£o Bearer"
    },
    {
      "key": "timestamp",
      "value": "{{$timestamp}}",
      "type": "string",
      "description": "Timestamp din√¢mico para requisi√ß√µes"
    }
  ],
  "item": [
    {
      "name": "üìñ Documenta√ß√£o e Instru√ß√µes",
      "item": [
        {
          "name": "üìã Como Usar Esta Collection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "## üöÄ Como Usar Esta Collection\n\n### üìã Pr√©-requisitos\n1. **Servidor ATous**: Certifique-se de que o servidor esteja rodando em `http://127.0.0.1:8000`\n2. **Postman**: Vers√£o 8.0 ou superior\n3. **Vari√°veis**: Configure as vari√°veis de ambiente se necess√°rio\n\n### üîß Configura√ß√£o Inicial\n1. **Importe a collection** no Postman\n2. **Configure as vari√°veis**:\n   - `base_url`: URL do servidor (padr√£o: http://127.0.0.1:8000)\n   - `jwt_token`: Token de autentica√ß√£o (se necess√°rio)\n3. **Execute o teste de conectividade** primeiro\n\n### üìä Estrutura da Collection\n- **üè† Sistema Principal**: Endpoints b√°sicos e documenta√ß√£o\n- **üè• Health Check**: Verifica√ß√£o de sa√∫de dos sistemas\n- **üõ°Ô∏è Sistema ABISS**: Detec√ß√£o de amea√ßas comportamentais\n- **üß¨ Sistema NNIS**: Sistema imune neural\n- **üîê Criptografia**: Endpoints de criptografia\n- **‚öîÔ∏è Simula√ß√£o de Ataques**: Testes de seguran√ßa\n- **üåê WebSocket**: Comunica√ß√£o em tempo real\n- **üß™ Testes de Carga**: Performance e stress tests\n\n### üéØ Ordem Recomendada de Testes\n1. **Conectividade**: `/health/ping`\n2. **Status Geral**: `/health`\n3. **Informa√ß√µes da API**: `/api/info`\n4. **Sistemas de Seguran√ßa**: ABISS e NNIS\n5. **Funcionalidades Espec√≠ficas**: Conforme necess√°rio\n\n### üîç Interpretando Respostas\n- **200**: Sucesso\n- **400**: Erro de requisi√ß√£o\n- **403**: Bloqueado por seguran√ßa\n- **429**: Rate limit atingido\n- **500**: Erro interno do servidor\n- **503**: Servi√ßo indispon√≠vel\n\n### üõ°Ô∏è Recursos de Seguran√ßa\n- **Rate Limiting**: Prote√ß√£o contra spam\n- **Input Validation**: Valida√ß√£o de entrada\n- **DDoS Protection**: Prote√ß√£o contra ataques\n- **ABISS/NNIS**: Detec√ß√£o inteligente de amea√ßas\n\n### üìù Logs e Debug\nTodos os requests incluem logs autom√°ticos no console do Postman para facilitar o debug."
          }
        },
        {
          "name": "üîß Teste de Conectividade",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/ping",
              "host": ["{{base_url}}"],
              "path": ["health", "ping"]
            },
            "description": "**üéØ Execute este teste primeiro!**\n\nTeste b√°sico de conectividade para verificar se o servidor est√° respondendo. Deve retornar uma resposta simples com 'pong'.\n\n**Resposta esperada:**\n```json\n{\n  \"message\": \"pong\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}\n```\n\n**Troubleshooting:**\n- Se falhar, verifique se o servidor est√° rodando\n- Confirme a URL base nas vari√°veis\n- Verifique firewall/proxy"
          },
          "response": [
            {
              "name": "Conectividade OK",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health/ping",
                  "host": ["{{base_url}}"],
                  "path": ["health", "ping"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"pong\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "üìä Status Completo do Sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/detailed",
              "host": ["{{base_url}}"],
              "path": ["health", "detailed"]
            },
            "description": "**üìã Vis√£o Geral Completa do Sistema**\n\nEste endpoint fornece informa√ß√µes detalhadas sobre:\n- Status de todos os subsistemas\n- M√©tricas de performance\n- Uso de recursos\n- Informa√ß√µes do ambiente\n\n**Use este endpoint para:**\n- Verificar sa√∫de geral do sistema\n- Monitorar performance\n- Debug de problemas\n- Relat√≥rios de status"
          }
        }
      ]
    },
    {
      "name": "üè† Sistema Principal",
      "item": [
        {
          "name": "Root - Informa√ß√µes da API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Endpoint raiz com informa√ß√µes b√°sicas da API e lista de endpoints dispon√≠veis"
          },
          "response": [
            {
              "name": "Informa√ß√µes da API",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/",
                  "host": ["{{base_url}}"],
                  "path": [""]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"name\": \"ATous Secure Network API\",\n  \"version\": \"2.0.0\",\n  \"status\": \"operational\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\",\n  \"endpoints\": {\n    \"health\": \"/health\",\n    \"status\": \"/api/v1/status\",\n    \"security\": \"/api/v1/security/status\",\n    \"docs\": \"/docs\",\n    \"redoc\": \"/redoc\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Documenta√ß√£o Swagger",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/docs",
              "host": ["{{base_url}}"],
              "path": ["docs"]
            },
            "description": "Interface Swagger UI para documenta√ß√£o interativa da API"
          }
        },
        {
          "name": "Documenta√ß√£o ReDoc",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/redoc",
              "host": ["{{base_url}}"],
              "path": ["redoc"]
            },
            "description": "Interface ReDoc para documenta√ß√£o da API"
          }
        },
        {
          "name": "OpenAPI Schema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/openapi.json",
              "host": ["{{base_url}}"],
              "path": ["openapi.json"]
            },
            "description": "Schema OpenAPI em formato JSON"
          }
        }
      ]
    },
    {
      "name": "üè• Health Check",
      "item": [
        {
          "name": "Health Check Principal",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Verifica√ß√£o de sa√∫de dos sistemas com m√©tricas detalhadas incluindo ABISS, NNIS e Model Manager"
          },
          "response": [
            {
              "name": "Sistema Saud√°vel",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"systems\": {\n    \"abiss\": {\n      \"status\": \"healthy\",\n      \"initialized\": true,\n      \"last_check\": \"2025-01-01T12:00:00Z\",\n      \"note\": \"Lazy loading - will initialize on first use\"\n    },\n    \"nnis\": {\n      \"status\": \"healthy\",\n      \"initialized\": true,\n      \"last_check\": \"2025-01-01T12:00:00Z\",\n      \"note\": \"Lazy loading - will initialize on first use\"\n    },\n    \"model_manager\": {\n      \"status\": \"healthy\",\n      \"initialized\": true,\n      \"last_check\": \"2025-01-01T12:00:00Z\"\n    }\n  },\n  \"timestamp\": \"2025-01-01T12:00:00Z\",\n  \"metrics\": {\n    \"response_time_ms\": 15.23,\n    \"memory_usage_mb\": 256.5,\n    \"uptime_seconds\": 3600.0\n  }\n}"
            },
            {
              "name": "Sistema com Problemas",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/health",
                  "host": ["{{base_url}}"],
                  "path": ["health"]
                }
              },
              "status": "Service Unavailable",
              "code": 503,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"unhealthy\",\n  \"systems\": {\n    \"abiss\": {\n      \"status\": \"unhealthy\",\n      \"initialized\": false,\n      \"error\": \"Failed to initialize ABISS system\",\n      \"last_check\": \"2025-01-01T12:00:00Z\"\n    },\n    \"nnis\": {\n      \"status\": \"healthy\",\n      \"initialized\": true,\n      \"last_check\": \"2025-01-01T12:00:00Z\"\n    }\n  },\n  \"timestamp\": \"2025-01-01T12:00:00Z\",\n  \"metrics\": {\n    \"response_time_ms\": 25.67,\n    \"memory_usage_mb\": 512.1,\n    \"uptime_seconds\": 1800.0\n  }\n}"
            }
          ]
        },
        {
          "name": "Health Check Detalhado",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/detailed",
              "host": ["{{base_url}}"],
              "path": ["health", "detailed"]
            },
            "description": "Health check com informa√ß√µes detalhadas do sistema"
          }
        },
        {
          "name": "Ping",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/ping",
              "host": ["{{base_url}}"],
              "path": ["health", "ping"]
            },
            "description": "Endpoint simples de ping para verificar conectividade"
          }
        }
      ]
    },
    {
      "name": "üìä Status do Sistema",
      "item": [
        {
          "name": "Status Geral do Sistema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "status"]
            },
            "description": "Status geral de todos os sistemas (ABISS, NNIS, Model Manager)"
          }
        },
        {
          "name": "Status de Seguran√ßa",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "status"]
            },
            "description": "Status espec√≠fico dos sistemas de seguran√ßa ABISS e NNIS"
          }
        }
      ]
    },
    {
      "name": "üõ°Ô∏è Sistema ABISS",
      "item": [
        {
          "name": "Status do ABISS",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/abiss/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "abiss", "status"]
            },
            "description": "Status detalhado do sistema ABISS com informa√ß√µes de modelo e estat√≠sticas"
          }
        },
        {
          "name": "Detectar Amea√ßas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"source_ip\": \"192.168.1.100\",\n  \"destination_ip\": \"10.0.0.1\",\n  \"packet_size\": 1024,\n  \"protocol\": \"TCP\",\n  \"port\": 80,\n  \"payload\": \"GET /index.html HTTP/1.1\",\n  \"timestamp\": \"{{timestamp}}\",\n  \"frequency\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/abiss/detect",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "abiss", "detect"]
            },
            "description": "Detecta amea√ßas em dados de rede usando o sistema ABISS com an√°lise comportamental avan√ßada"
          },
          "response": [
            {
              "name": "Tr√°fego Normal",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source_ip\": \"192.168.1.100\",\n  \"destination_ip\": \"10.0.0.1\",\n  \"packet_size\": 1024,\n  \"protocol\": \"TCP\",\n  \"port\": 80,\n  \"payload\": \"GET /index.html HTTP/1.1\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/abiss/detect",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "abiss", "detect"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"threat_detected\": false,\n  \"threat_score\": 0.15,\n  \"threat_description\": \"Normal HTTP traffic pattern\",\n  \"detection_time_ms\": 12.34,\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            },
            {
              "name": "Amea√ßa Detectada",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source_ip\": \"192.168.1.100\",\n  \"payload\": \"'; DROP TABLE users; --\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/abiss/detect",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "abiss", "detect"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"threat_detected\": true,\n  \"threat_score\": 0.95,\n  \"threat_description\": \"SQL Injection attempt detected\",\n  \"detection_time_ms\": 8.76,\n  \"timestamp\": \"2025-01-01T12:00:00Z\",\n  \"threat_type\": \"sql_injection\",\n  \"severity\": \"high\"\n}"
            }
          ]
        },
        {
          "name": "Analisar Comportamento",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": \"user123\",\n  \"session_duration\": 3600,\n  \"actions_per_minute\": 15,\n  \"failed_login_attempts\": 0,\n  \"unusual_access_patterns\": false,\n  \"geolocation\": {\n    \"country\": \"BR\",\n    \"city\": \"S√£o Paulo\"\n  },\n  \"device_fingerprint\": \"abc123def456\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/abiss/analyze-behavior",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "abiss", "analyze-behavior"]
            },
            "description": "Analisa comportamento do usu√°rio para detectar anomalias"
          }
        }
      ]
    },
    {
      "name": "üß¨ Sistema NNIS",
      "item": [
        {
          "name": "Status do NNIS",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/nnis/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "nnis", "status"]
            },
            "description": "Status do sistema imune neural NNIS com m√©tricas de c√©lulas imunes"
          }
        },
        {
          "name": "Detectar Ant√≠genos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"network_traffic\": {\n    \"packets_per_second\": 1000,\n    \"average_packet_size\": 512,\n    \"protocol_distribution\": {\n      \"TCP\": 0.7,\n      \"UDP\": 0.2,\n      \"ICMP\": 0.1\n    }\n  },\n  \"connection_patterns\": {\n    \"new_connections_per_minute\": 50,\n    \"failed_connections\": 5,\n    \"suspicious_ports\": [22, 23, 3389]\n  },\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/nnis/detect-antigens",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "nnis", "detect-antigens"]
            },
            "description": "Detecta ant√≠genos de amea√ßas usando o sistema imune neural"
          }
        },
        {
          "name": "Gerar Resposta Imune",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"threat_type\": \"malware\",\n  \"confidence\": 0.85,\n  \"source\": \"192.168.1.100\",\n  \"severity\": \"high\",\n  \"description\": \"Suspicious executable detected\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/nnis/generate-response",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "nnis", "generate-response"]
            },
            "description": "Gera resposta imune autom√°tica para uma amea√ßa espec√≠fica"
          }
        }
      ]
    },
    {
      "name": "üîç Intelig√™ncia de Amea√ßas",
      "item": [
        {
          "name": "Intelig√™ncia Combinada",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/threat-intelligence",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "threat-intelligence"]
            },
            "description": "Obt√©m intelig√™ncia de amea√ßas combinada dos sistemas ABISS e NNIS"
          }
        },
        {
          "name": "Relat√≥rio de Seguran√ßa",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/security-report",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "security-report"]
            },
            "description": "Gera relat√≥rio abrangente de seguran√ßa do sistema"
          }
        }
      ]
    },
    {
      "name": "üõ°Ô∏è Middleware de Seguran√ßa",
      "item": [
        {
          "name": "Teste do Middleware",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"test_data\": \"normal request\",\n  \"user_id\": \"test_user\",\n  \"action\": \"test_middleware\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/test",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "test"]
            },
            "description": "Testa o middleware de seguran√ßa com dados simulados"
          }
        },
        {
          "name": "Configura√ß√£o do Middleware",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/config",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "config"]
            },
            "description": "Obt√©m configura√ß√£o atual do middleware de seguran√ßa"
          }
        },
        {
          "name": "Estat√≠sticas do Middleware",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "stats"]
            },
            "description": "Estat√≠sticas detalhadas do middleware de seguran√ßa"
          }
        },
        {
          "name": "Estat√≠sticas Legacy",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/legacy-stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "legacy-stats"]
            },
            "description": "Endpoint legacy para compatibilidade com vers√µes anteriores"
          }
        }
      ]
    },
    {
      "name": "üö´ Gerenciamento de IPs",
      "item": [
        {
          "name": "Bloquear IP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ip_address\": \"192.168.1.100\",\n  \"reason\": \"Suspicious activity detected\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/block-ip",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "block-ip"]
            },
            "description": "Bloqueia um endere√ßo IP espec√≠fico"
          }
        },
        {
          "name": "Desbloquear IP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ip_address\": \"192.168.1.100\",\n  \"reason\": \"False positive - legitimate user\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/unblock-ip",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "unblock-ip"]
            },
            "description": "Remove o bloqueio de um endere√ßo IP"
          }
        }
      ]
    },
    {
      "name": "‚úÖ Valida√ß√£o de Entrada",
      "item": [
        {
          "name": "Validar Input",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"SELECT * FROM users WHERE id = 1\",\n  \"context\": \"database\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["security", "validate-input"]
            },
            "description": "Valida dados de entrada para detectar amea√ßas de seguran√ßa"
          }
        },
        {
          "name": "Validar Input - SQL Injection B√°sico",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"'; DROP TABLE users; --\",\n  \"context\": \"database\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload b√°sico de SQL Injection"
          }
        },
        {
          "name": "Validar Input - SQL Injection Avan√ßado",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"1' UNION SELECT username, password FROM admin_users WHERE '1'='1\",\n  \"context\": \"database\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload avan√ßado de SQL Injection usando UNION"
          }
        },
        {
          "name": "Validar Input - XSS B√°sico",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"<script>alert('XSS')</script>\",\n  \"context\": \"html\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload b√°sico de Cross-Site Scripting"
          }
        },
        {
          "name": "Validar Input - XSS Avan√ßado",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"<img src=x onerror=\\\"javascript:alert('XSS')\\\">\",\n  \"context\": \"html\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload avan√ßado de XSS usando atributos de imagem"
          }
        },
        {
          "name": "Validar Input - Command Injection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"; rm -rf / --no-preserve-root\",\n  \"context\": \"system\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload de Command Injection"
          }
        },
        {
          "name": "Validar Input - Path Traversal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"../../../etc/passwd\",\n  \"context\": \"web\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload de Path Traversal"
          }
        },
        {
          "name": "Validar Input - LDAP Injection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input_data\": \"*)(uid=*))(|(uid=*\",\n  \"context\": \"ldap\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/validate-input",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validate-input"]
            },
            "description": "Teste de valida√ß√£o com payload de LDAP Injection"
          }
        },
        {
          "name": "Padr√µes de Valida√ß√£o",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/validation-patterns",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "validation-patterns"]
            },
            "description": "Informa√ß√µes sobre padr√µes de valida√ß√£o utilizados pelo sistema"
          }
        }
      ]
    },
    {
      "name": "‚öîÔ∏è Simula√ß√£o de Ataques",
      "item": [
        {
          "name": "Simular SQL Injection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/simulate-attack?attack_type=sql_injection",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "simulate-attack"],
              "query": [
                {
                  "key": "attack_type",
                  "value": "sql_injection"
                }
              ]
            },
            "description": "Simula um ataque de SQL Injection para testar as defesas"
          }
        },
        {
          "name": "Simular XSS",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/simulate-attack?attack_type=xss",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "simulate-attack"],
              "query": [
                {
                  "key": "attack_type",
                  "value": "xss"
                }
              ]
            },
            "description": "Simula um ataque de Cross-Site Scripting"
          }
        },
        {
          "name": "Simular Command Injection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/simulate-attack?attack_type=command_injection",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "simulate-attack"],
              "query": [
                {
                  "key": "attack_type",
                  "value": "command_injection"
                }
              ]
            },
            "description": "Simula um ataque de Command Injection"
          }
        },
        {
          "name": "Simular DDoS",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/simulate-attack?attack_type=ddos_simulation",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "simulate-attack"],
              "query": [
                {
                  "key": "attack_type",
                  "value": "ddos_simulation"
                }
              ]
            },
            "description": "Simula um ataque de DDoS com payload grande"
          }
        }
      ]
    },
    {
      "name": "üîê Criptografia",
      "item": [
        {
          "name": "Criptografar via /api/crypto/encrypt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Dados confidenciais para criptografar\",\n  \"algorithm\": \"AES-256\",\n  \"key_id\": \"crypto-key-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/crypto/encrypt",
              "host": ["{{base_url}}"],
              "path": ["api", "crypto", "encrypt"]
            },
            "description": "Endpoint de criptografia via /api/crypto/encrypt - Criptografa dados usando algoritmos seguros"
          },
          "response": [
            {
              "name": "Sucesso",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"message\": \"test data\",\n  \"algorithm\": \"AES-256\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/crypto/encrypt",
                  "host": ["{{base_url}}"],
                  "path": ["api", "crypto", "encrypt"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"encrypted_data\": \"a1b2c3d4e5f6...\",\n  \"algorithm\": \"AES-256\",\n  \"key_id\": \"crypto-key-001\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Criptografar via /api/security/encrypt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Dados de seguran√ßa para criptografar\",\n  \"algorithm\": \"AES-256\",\n  \"key_id\": \"security-key-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/security/encrypt",
              "host": ["{{base_url}}"],
              "path": ["api", "security", "encrypt"]
            },
            "description": "Endpoint de criptografia via /api/security/encrypt - Criptografia focada em seguran√ßa"
          }
        },
        {
          "name": "Criptografar via /encrypt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Dados simples para criptografar\",\n  \"algorithm\": \"AES-256\",\n  \"key_id\": \"simple-key-001\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/encrypt",
              "host": ["{{base_url}}"],
              "path": ["encrypt"]
            },
            "description": "Endpoint de criptografia simples via /encrypt - Interface simplificada"
          }
        }
      ]
    },
    {
      "name": "üìä API v1 - Status e Informa√ß√µes",
      "item": [
        {
          "name": "Status Geral do Sistema v1",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "status"]
            },
            "description": "Status geral de todos os sistemas (ABISS, NNIS, Model Manager) - API v1"
          },
          "response": [
            {
              "name": "Sistema Saud√°vel",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/status",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"systems\": {\n    \"abiss\": {\n      \"status\": \"healthy\",\n      \"initialized\": true,\n      \"monitoring\": true\n    },\n    \"nnis\": {\n      \"status\": \"healthy\",\n      \"initialized\": true,\n      \"immune_cells\": 50\n    }\n  },\n  \"timestamp\": \"2025-01-01T12:00:00Z\",\n  \"version\": \"2.0.0\"\n}"
            }
          ]
        },
        {
          "name": "Status de Seguran√ßa v1",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/security/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "status"]
            },
            "description": "Status espec√≠fico dos sistemas de seguran√ßa ABISS e NNIS - API v1"
          }
        }
      ]
    },
    {
      "name": "üìã Informa√ß√µes da API",
      "item": [
        {
          "name": "Informa√ß√µes da API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/info",
              "host": ["{{base_url}}"],
              "path": ["api", "info"]
            },
            "description": "Informa√ß√µes detalhadas da API, recursos dispon√≠veis e endpoints"
          },
          "response": [
            {
              "name": "Informa√ß√µes Completas",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/info",
                  "host": ["{{base_url}}"],
                  "path": ["api", "info"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"api\": {\n    \"name\": \"ATous Secure Network API\",\n    \"version\": \"2.0.0\",\n    \"description\": \"Advanced security API with ABISS/NNIS integration\",\n    \"author\": \"ATous Security Team\",\n    \"license\": \"MIT\"\n  },\n  \"features\": {\n    \"abiss_system\": true,\n    \"nnis_system\": true,\n    \"crypto_endpoints\": true,\n    \"security_middleware\": true,\n    \"rate_limiting\": true,\n    \"ddos_protection\": true\n  },\n  \"endpoints\": {\n    \"health\": \"/health\",\n    \"info\": \"/api/info\",\n    \"security_status\": \"/api/security/status\",\n    \"metrics\": \"/api/metrics\",\n    \"crypto\": [\"/api/crypto/encrypt\", \"/api/security/encrypt\", \"/encrypt\"],\n    \"docs\": \"/docs\"\n  },\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Status de Seguran√ßa da API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/status",
              "host": ["{{base_url}}"],
              "path": ["api", "security", "status"]
            },
            "description": "Status dos sistemas de seguran√ßa com informa√ß√µes detalhadas"
          }
        },
        {
          "name": "M√©tricas do Sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/metrics",
              "host": ["{{base_url}}"],
              "path": ["api", "metrics"]
            },
            "description": "M√©tricas detalhadas do sistema incluindo uso de CPU, mem√≥ria e estat√≠sticas de seguran√ßa"
          },
          "response": [
            {
              "name": "M√©tricas Completas",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/metrics",
                  "host": ["{{base_url}}"],
                  "path": ["api", "metrics"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"system\": {\n    \"uptime_seconds\": 3600,\n    \"memory_usage_mb\": 256.5,\n    \"cpu_percent\": 15.2,\n    \"threads\": 8\n  },\n  \"api\": {\n    \"total_requests\": 1250,\n    \"active_connections\": 5,\n    \"errors_count\": 2\n  },\n  \"security\": {\n    \"threats_blocked\": 15,\n    \"anomalies_detected\": 8,\n    \"rate_limit_hits\": 3\n  },\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "üåê WebSocket Endpoints",
      "item": [
        {
          "name": "WebSocket Principal (/ws)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "ws://127.0.0.1:8000/ws",
              "protocol": "ws",
              "host": ["127.0.0.1"],
              "port": "8000",
              "path": ["ws"]
            },
            "description": "Endpoint WebSocket principal para comunica√ß√£o em tempo real. Aceita mensagens JSON e texto simples, retornando echo das mensagens recebidas."
          }
        },
        {
          "name": "WebSocket API (/api/ws)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "ws://127.0.0.1:8000/api/ws",
              "protocol": "ws",
              "host": ["127.0.0.1"],
              "port": "8000",
              "path": ["api", "ws"]
            },
            "description": "Endpoint WebSocket da API para comunica√ß√£o estruturada. Ideal para integra√ß√µes que precisam de comunica√ß√£o bidirecional."
          }
        },
        {
          "name": "WebSocket Gen√©rico (/websocket)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "ws://127.0.0.1:8000/websocket",
              "protocol": "ws",
              "host": ["127.0.0.1"],
              "port": "8000",
              "path": ["websocket"]
            },
            "description": "Endpoint WebSocket gen√©rico para compatibilidade com diferentes clientes WebSocket."
          }
        },
        {
          "name": "WebSocket Teste de N√≥ (/ws/test_node)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "ws://127.0.0.1:8000/ws/test_node",
              "protocol": "ws",
              "host": ["127.0.0.1"],
              "port": "8000",
              "path": ["ws", "test_node"]
            },
            "description": "Endpoint WebSocket espec√≠fico para teste de conectividade de n√≥s. Use um cliente WebSocket para testar a comunica√ß√£o em tempo real."
          }
        }
      ]
    },
    {
      "name": "üß™ Testes de Carga e Performance",
      "item": [
        {
          "name": "Teste de Rate Limiting",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"test\": \"rate_limit\",\n  \"timestamp\": \"{{timestamp}}\",\n  \"request_id\": \"{{$randomUUID}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/test",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "test"]
            },
            "description": "Execute m√∫ltiplas vezes rapidamente para testar rate limiting. O sistema deve bloquear requisi√ß√µes excessivas com status 429."
          },
          "response": [
            {
              "name": "Rate Limit Atingido",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"test\": \"rate_limit\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/middleware/test",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "middleware", "test"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Rate limit exceeded\",\n  \"timestamp\": \"2025-01-01T12:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "Teste de Payload Grande",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"large_data\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  \"repeated_field\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n  \"test_type\": \"large_payload\",\n  \"timestamp\": \"{{timestamp}}\",\n  \"request_id\": \"{{$randomUUID}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/security/middleware/test",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "middleware", "test"]
            },
            "description": "Testa o sistema com payload grande para verificar limites de tamanho e prote√ß√£o contra DDoS"
          }
        },
        {
          "name": "Teste de M√∫ltiplas Conex√µes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health?test=concurrent&id={{$randomInt}}",
              "host": ["{{base_url}}"],
              "path": ["health"],
              "query": [
                {
                  "key": "test",
                  "value": "concurrent"
                },
                {
                  "key": "id",
                  "value": "{{$randomInt}}"
                }
              ]
            },
            "description": "Teste para verificar como o sistema lida com m√∫ltiplas conex√µes simult√¢neas"
          }
        },
        {
          "name": "Teste de Stress - Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanStressTest/1.0",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/health?stress_test=true&iteration={{$randomInt}}",
              "host": ["{{base_url}}"],
              "path": ["health"],
              "query": [
                {
                  "key": "stress_test",
                  "value": "true"
                },
                {
                  "key": "iteration",
                  "value": "{{$randomInt}}"
                }
              ]
            },
            "description": "Teste de stress no endpoint de health check para verificar estabilidade sob carga"
          }
        }
      ]
    },
    {
      "name": "üîß Utilit√°rios e Debug",
      "item": [
        {
          "name": "Teste de Conectividade B√°sica",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/ping",
              "host": ["{{base_url}}"],
              "path": ["health", "ping"]
            },
            "description": "Teste simples de conectividade - deve retornar 'pong'"
          }
        },
        {
          "name": "Verificar Tempo de Resposta",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/metrics",
              "host": ["{{base_url}}"],
              "path": ["api", "metrics"]
            },
            "description": "Verifica m√©tricas de performance e tempo de resposta do sistema"
          }
        },
        {
          "name": "Teste de Headers Customizados",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Test-Header",
                "value": "PostmanTest",
                "type": "text"
              },
              {
                "key": "X-Request-ID",
                "value": "{{$randomUUID}}",
                "type": "text"
              },
              {
                "key": "User-Agent",
                "value": "ATous-Test-Client/1.0",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Testa como o sistema processa headers customizados"
          }
        }
      ]
    },
    {
      "name": "üîÑ Testes de Integra√ß√£o",
      "item": [
        {
          "name": "Cen√°rio Completo - Detec√ß√£o de Amea√ßa",
          "item": [
            {
              "name": "1. Verificar Status dos Sistemas",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/status",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "status"]
                },
                "description": "Primeiro passo: verificar se ABISS e NNIS est√£o operacionais"
              }
            },
            {
              "name": "2. Enviar Dados Suspeitos para ABISS",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source_ip\": \"192.168.1.100\",\n  \"destination_ip\": \"10.0.0.1\",\n  \"payload\": \"'; DROP TABLE users; --\",\n  \"protocol\": \"HTTP\",\n  \"timestamp\": \"{{timestamp}}\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/abiss/detect",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "abiss", "detect"]
                },
                "description": "Segundo passo: enviar dados suspeitos para an√°lise do ABISS"
              }
            },
            {
              "name": "3. Analisar com NNIS",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"source_ip\": \"192.168.1.100\",\n  \"endpoint\": \"/api/users\",\n  \"method\": \"POST\",\n  \"payload\": \"'; DROP TABLE users; --\",\n  \"timestamp\": \"{{timestamp}}\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/nnis/detect-antigens",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "nnis", "detect-antigens"]
                },
                "description": "Terceiro passo: an√°lise complementar com NNIS"
              }
            },
            {
              "name": "4. Gerar Resposta Imune",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"threat_type\": \"sql_injection\",\n  \"confidence\": 0.95,\n  \"source\": \"192.168.1.100\",\n  \"severity\": \"high\",\n  \"description\": \"SQL Injection attempt detected\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/nnis/generate-response",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "nnis", "generate-response"]
                },
                "description": "Quarto passo: gerar resposta imune autom√°tica"
              }
            },
            {
              "name": "5. Verificar Relat√≥rio de Seguran√ßa",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/security/security-report",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "security-report"]
                },
                "description": "Quinto passo: verificar relat√≥rio consolidado de seguran√ßa"
              }
            }
          ],
          "description": "Cen√°rio completo de detec√ß√£o e resposta a amea√ßas usando ABISS e NNIS em conjunto"
        },
        {
          "name": "Cen√°rio de Stress Test",
          "item": [
            {
              "name": "1. Baseline - M√©tricas Iniciais",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/metrics",
                  "host": ["{{base_url}}"],
                  "path": ["api", "metrics"]
                },
                "description": "Capturar m√©tricas iniciais antes do teste de stress"
              }
            },
            {
              "name": "2. M√∫ltiplas Requisi√ß√µes R√°pidas",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"test_type\": \"stress_test\",\n  \"iteration\": \"{{$randomInt}}\",\n  \"timestamp\": \"{{timestamp}}\",\n  \"payload\": \"stress test data\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/security/middleware/test",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "middleware", "test"]
                },
                "description": "Execute este request m√∫ltiplas vezes rapidamente (use Runner do Postman)"
              }
            },
            {
              "name": "3. Verificar Rate Limiting",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/security/middleware/stats",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "security", "middleware", "stats"]
                },
                "description": "Verificar se o rate limiting foi ativado"
              }
            },
            {
              "name": "4. M√©tricas P√≥s-Stress",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/metrics",
                  "host": ["{{base_url}}"],
                  "path": ["api", "metrics"]
                },
                "description": "Comparar m√©tricas ap√≥s o teste de stress"
              }
            }
          ],
          "description": "Cen√°rio de teste de stress para verificar comportamento sob carga"
        },
        {
          "name": "Teste de Recupera√ß√£o do Sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/detailed",
              "host": ["{{base_url}}"],
              "path": ["health", "detailed"]
            },
            "description": "Teste final para verificar se o sistema se recuperou completamente ap√≥s os testes de stress"
          }
        }
      ]
    },
    {
      "name": "üìà Relat√≥rios e Monitoramento",
      "item": [
        {
          "name": "Relat√≥rio Completo de Seguran√ßa",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/security/security-report",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "security-report"]
            },
            "description": "Relat√≥rio abrangente com todas as m√©tricas de seguran√ßa, estat√≠sticas de amea√ßas e status dos sistemas"
          }
        },
        {
          "name": "Intelig√™ncia de Amea√ßas Combinada",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/security/threat-intelligence",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "security", "threat-intelligence"]
            },
            "description": "Dados de intelig√™ncia de amea√ßas combinados dos sistemas ABISS e NNIS"
          }
        },
        {
          "name": "Estat√≠sticas de Performance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/metrics",
              "host": ["{{base_url}}"],
              "path": ["api", "metrics"]
            },
            "description": "M√©tricas detalhadas de performance do sistema incluindo CPU, mem√≥ria e estat√≠sticas de API"
          }
        },
        {
          "name": "Status de Todos os Sistemas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/status",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "status"]
            },
            "description": "Status consolidado de todos os sistemas (ABISS, NNIS, Model Manager)"
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script para executar antes de cada requisi√ß√£o",
          "console.log('üöÄ Executando requisi√ß√£o para:', pm.request.url.toString());",
          "",
          "// Adicionar timestamp din√¢mico",
          "pm.globals.set('timestamp', new Date().toISOString());",
          "",
          "// Adicionar ID √∫nico para cada requisi√ß√£o",
          "pm.globals.set('requestId', pm.variables.replaceIn('{{$randomUUID}}'));",
          "",
          "// Log de informa√ß√µes da requisi√ß√£o",
          "console.log('üìÖ Timestamp:', pm.globals.get('timestamp'));",
          "console.log('üÜî Request ID:', pm.globals.get('requestId'));",
          "",
          "// Verificar se √© um endpoint de seguran√ßa",
          "const url = pm.request.url.toString();",
          "if (url.includes('/security/') || url.includes('/abiss/') || url.includes('/nnis/')) {",
          "    console.log('üõ°Ô∏è Endpoint de seguran√ßa detectado');",
          "}",
          "",
          "// Verificar se √© um WebSocket",
          "if (url.startsWith('ws://') || url.startsWith('wss://')) {",
          "    console.log('üåê Conex√£o WebSocket detectada');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Testes autom√°ticos para todas as requisi√ß√µes",
          "pm.test('‚úÖ Status code n√£o √© 500 (erro interno)', function () {",
          "    pm.expect(pm.response.code).to.not.equal(500);",
          "});",
          "",
          "pm.test('‚ö° Tempo de resposta menor que 5 segundos', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('üìÑ Resposta tem Content-Type v√°lido', function () {",
          "    const contentType = pm.response.headers.get('Content-Type');",
          "    if (contentType) {",
          "        pm.expect(contentType).to.match(/application\\/json|text\\/html|text\\/plain/);",
          "    }",
          "});",
          "",
          "// Teste espec√≠fico para endpoints JSON",
          "if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
          "    pm.test('üîç Resposta JSON tem timestamp', function () {",
          "        try {",
          "            const jsonData = pm.response.json();",
          "            if (jsonData.timestamp) {",
          "                pm.expect(jsonData.timestamp).to.be.a('string');",
          "                pm.expect(jsonData.timestamp).to.match(/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/);",
          "            }",
          "        } catch (e) {",
          "            console.log('‚ö†Ô∏è N√£o foi poss√≠vel parsear JSON ou timestamp n√£o encontrado');",
          "        }",
          "    });",
          "}",
          "",
          "// Teste para endpoints de seguran√ßa",
          "const url = pm.request.url.toString();",
          "if (url.includes('/security/') || url.includes('/abiss/') || url.includes('/nnis/')) {",
          "    pm.test('üõ°Ô∏è Endpoint de seguran√ßa respondeu adequadamente', function () {",
          "        pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 401, 403, 429]);",
          "    });",
          "}",
          "",
          "// Teste para rate limiting",
          "if (pm.response.code === 429) {",
          "    pm.test('‚è±Ô∏è Rate limiting ativo - resposta adequada', function () {",
          "        pm.expect(pm.response.code).to.equal(429);",
          "        console.log('üö´ Rate limit atingido - sistema funcionando corretamente');",
          "    });",
          "}",
          "",
          "// Teste para bloqueios de seguran√ßa",
          "if (pm.response.code === 403) {",
          "    pm.test('üö´ Bloqueio de seguran√ßa - resposta adequada', function () {",
          "        pm.expect(pm.response.code).to.equal(403);",
          "        console.log('üõ°Ô∏è Requisi√ß√£o bloqueada por seguran√ßa - sistema funcionando');",
          "    });",
          "}",
          "",
          "// Log detalhado da resposta para debug",
          "console.log('üìä Status da resposta:', pm.response.status);",
          "console.log('‚è±Ô∏è Tempo de resposta:', pm.response.responseTime + 'ms');",
          "console.log('üìè Tamanho da resposta:', pm.response.responseSize + ' bytes');",
          "",
          "// Log de headers importantes",
          "const importantHeaders = ['Content-Type', 'Content-Length', 'X-RateLimit-Remaining', 'X-Request-ID'];",
          "importantHeaders.forEach(header => {",
          "    const value = pm.response.headers.get(header);",
          "    if (value) {",
          "        console.log(`üìã ${header}:`, value);",
          "    }",
          "});",
          "",
          "// Salvar m√©tricas para relat√≥rio",
          "if (!pm.globals.get('testMetrics')) {",
          "    pm.globals.set('testMetrics', JSON.stringify([]));",
          "}",
          "",
          "const metrics = JSON.parse(pm.globals.get('testMetrics'));",
          "metrics.push({",
          "    url: pm.request.url.toString(),",
          "    method: pm.request.method,",
          "    status: pm.response.code,",
          "    responseTime: pm.response.responseTime,",
          "    timestamp: new Date().toISOString()",
          "});",
          "",
          "pm.globals.set('testMetrics', JSON.stringify(metrics));"
        ]
      }
    }
  ]
}