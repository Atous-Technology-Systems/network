{
  "info": {
    "name": "ATous Secure Network API Collection",
    "description": "Collection completa para testar todas as funcionalidades do sistema ATous Secure Network via endpoints REST e WebSockets. Esta collection inclui todos os endpoints disponiveis na aplicacao, com exemplos de payloads, testes automatizados e documentacao detalhada.",
    "version": "4.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string",
      "description": "URL base do servidor ATous Secure Network"
    },
    {
      "key": "admin_api_key",
      "value": "dev-admin",
      "type": "string",
      "description": "Chave de API para autenticacao admin"
    },
    {
      "key": "jwt_token",
      "value": "your-jwt-token-here",
      "type": "string",
      "description": "Token JWT para autenticacao Bearer (quando implementado)"
    },
    {
      "key": "refresh_token",
      "value": "your-refresh-token-here",
      "type": "string",
      "description": "Refresh token para renovacao de JWT"
    },
    {
      "key": "timestamp",
      "value": "{{$timestamp}}",
      "type": "string",
      "description": "Timestamp dinamico para requisicoes"
    }
  ],
  "item": [
    {
      "name": "Documentacao e Instrucoes",
      "item": [
        {
          "name": "Como Usar Esta Collection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                ""
              ]
            },
            "description": "## Como Usar Esta Collection\n\n### Pre-requisitos\n1. **Servidor ATous**: Certifique-se de que o servidor esteja rodando em `http://127.0.0.1:8000`\n2. **Postman**: Versao 8.0 ou superior\n3. **Variaveis**: Configure as variaveis de ambiente se necessario\n\n### Configuracao Inicial\n1. **Importe a collection** no Postman\n2. **Configure as variaveis**:\n   - `base_url`: URL do servidor (padrao: http://127.0.0.1:8000)\n   - `admin_api_key`: Chave de API admin (padrao: dev-admin)\n3. **Execute o teste de conectividade** primeiro\n\n### Estrutura da Collection\n- **Sistema Principal**: Endpoints basicos e documentacao\n- **Health Check**: Verificacao de saude dos sistemas\n- **Autenticacao e Usuarios**: Sistema completo de auth e gerenciamento de usuarios\n- **Admin**: Interface administrativa (MVP)\n- **Discovery**: Sistema de descoberta de nos\n- **Relay**: Sistema de retransmissao\n- **Agents**: Gerenciamento de agentes\n- **Policies**: Gerenciamento de politicas\n- **Seguranca Avancada**: Sistemas ABISS e NNIS\n- **Criptografia**: Endpoints de criptografia\n- **WebSocket**: Comunicacao em tempo real\n- **Testes de Carga**: Performance e stress tests\n\n### Ordem Recomendada de Testes\n1. **Conectividade**: `/health`\n2. **Autenticacao**: Registro e login de usuario\n3. **Status Geral**: `/api/info`\n4. **Admin**: `/v1/admin/overview`\n5. **Funcionalidades Especificas**: Conforme necessario\n\n### Interpretando Respostas\n- **200**: Sucesso\n- **400**: Erro de requisicao\n- **401**: Nao autorizado\n- **403**: Bloqueado por seguranca\n- **429**: Rate limit atingido\n- **500**: Erro interno do servidor\n- **503**: Servico indisponivel\n\n### Recursos de Seguranca\n- **Rate Limiting**: Protecao contra spam\n- **Input Validation**: Validacao de entrada\n- **DDoS Protection**: Protecao contra ataques\n- **Presets de Seguranca**: Configuracoes adaptaveis\n- **JWT + Refresh Tokens**: Autenticacao segura\n- **RBAC**: Controle de acesso baseado em roles\n\n### Logs e Debug\nTodos os requests incluem logs automaticos no console do Postman para facilitar o debug."
          }
        },
        {
          "name": "Teste de Conectividade",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "**Execute este teste primeiro!**\n\nTeste basico de conectividade para verificar se o servidor esta respondendo. Deve retornar status de saude dos sistemas.\n\n**Resposta esperada:**\n```json\n{\n  \"status\": \"healthy\",\n  \"systems\": {\n    \"abiss\": {\"status\": \"healthy\"},\n    \"nnis\": {\"status\": \"healthy\"}\n  }\n}\n```\n\n**Troubleshooting:**\n- Se falhar, verifique se o servidor esta rodando\n- Confirme a URL base nas variaveis\n- Verifique firewall/proxy"
          }
        }
      ]
    },
    {
      "name": "Sistema Principal",
      "item": [
        {
          "name": "Root - Informacoes da API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                ""
              ]
            },
            "description": "Endpoint raiz com informacoes basicas da API e lista de endpoints disponiveis"
          }
        },
        {
          "name": "Documentacao Swagger",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/docs",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "docs"
              ]
            },
            "description": "Interface Swagger UI para documentacao interativa da API"
          }
        },
        {
          "name": "Documentacao ReDoc",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/redoc",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "redoc"
              ]
            },
            "description": "Documentacao ReDoc da API com formato mais legivel"
          }
        },
        {
          "name": "OpenAPI Schema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/openapi.json",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "openapi.json"
              ]
            },
            "description": "Schema OpenAPI da API em formato JSON"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Status Geral do Sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Verifica o status de saude de todos os sistemas e componentes"
          }
        },
        {
          "name": "Status Detalhado dos Componentes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/detailed",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health",
                "detailed"
              ]
            },
            "description": "Status detalhado de cada componente do sistema com metricas"
          }
        }
      ]
    },
    {
      "name": "Autenticacao e Usuarios",
      "item": [
        {
          "name": "Registrar Usuario",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            },
            "description": "**Registrar novo usuário no sistema**\n\nCria uma nova conta de usuário com as credenciais fornecidas. O usuário recebe automaticamente o papel de OPERATOR por padrão.\n\n**Payload:**\n```json\n{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!@#\"\n}\n```\n\n**Resposta esperada:** 201 Created com dados do usuário criado"
          }
        },
        {
          "name": "Login de Usuario",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "**Autenticar usuário e gerar tokens de acesso**\n\nValida as credenciais do usuário e retorna um access token JWT e um refresh token para renovação automática. O sistema também registra a atividade de login para auditoria.\n\n**Payload:**\n```json\n{\n  \"username\": \"testuser\",\n  \"password\": \"Test123!@#\"\n}\n```\n\n**Resposta esperada:** 200 OK com access_token, refresh_token e dados do usuário"
          }
        },
        {
          "name": "Renovar Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "refresh"
              ]
            },
            "description": "**Renovar access token usando refresh token**\n\nPermite renovar o access token expirado usando um refresh token válido. O sistema gera um novo access token e rotaciona o refresh token para segurança adicional. Apenas o último refresh token é válido.\n\n**Payload:**\n```json\n{\n  \"refresh_token\": \"{{refresh_token}}\"\n}\n```\n\n**Resposta esperada:** 200 OK com novo access_token e refresh_token rotacionado"
          }
        },
        {
          "name": "Logout de Usuario",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "logout"
              ]
            },
            "description": "**Fazer logout do usuário e invalidar tokens**\n\nRealiza o logout do usuário autenticado, revogando o refresh token se fornecido. O access token continua válido até sua expiração natural, mas o refresh token é invalidado para segurança.\n\n**Payload:**\n```json\n{\n  \"refresh_token\": \"{{refresh_token}}\"\n}\n```\n\n**Resposta esperada:** 200 OK com confirmação de logout"
          }
        },
        {
          "name": "Obter Perfil do Usuario",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "profile"
              ]
            },
            "description": "**Obter perfil completo do usuário autenticado**\n\nRetorna todas as informações do perfil do usuário logado, incluindo dados pessoais, papéis, permissões e status da conta. Requer autenticação via token JWT válido.\n\n**Resposta esperada:** 200 OK com perfil completo do usuário"
          }
        },
        {
          "name": "Atualizar Perfil do Usuario",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "profile"
              ]
            },
            "description": "**Atualizar perfil do usuário autenticado**\n\nPermite ao usuário atualizar seus dados pessoais, incluindo email, senha e outros campos configuráveis. Apenas o próprio usuário pode modificar seu perfil. Requer autenticação via token JWT.\n\n**Payload:**\n```json\n{\n  \"email\": \"newemail@example.com\",\n  \"password\": \"NewPassword123!@#\"\n}\n```\n\n**Resposta esperada:** 200 OK com perfil atualizado"
          }
        },
        {
          "name": "Alterar Senha",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/change-password",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "change-password"
              ]
            },
            "description": "**Alterar senha do usuário autenticado**\n\nPermite ao usuário alterar sua senha atual por uma nova. Requer a senha atual para validação e a nova senha deve atender aos critérios de complexidade do sistema.\n\n**Payload:**\n```json\n{\n  \"current_password\": \"Test123!@#\",\n  \"new_password\": \"NewPassword123!@#\"\n}\n```\n\n**Resposta esperada:** 200 OK com confirmação de alteração"
          }
        },
        {
          "name": "Obter Sessoes Ativas",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/sessions",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "sessions"
              ]
            },
            "description": "**Obter sessões ativas do usuário autenticado**\n\nLista todas as sessões ativas do usuário, incluindo informações sobre IPs de origem, User-Agents e timestamps de atividade. Útil para monitorar e gerenciar múltiplas sessões.\n\n**Resposta esperada:** 200 OK com lista de sessões ativas"
          }
        },
        {
          "name": "Listar Usuarios (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/users?page=1&per_page=10",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            },
            "description": "**Listar usuários do sistema (apenas para administradores)**\n\nEndpoint administrativo que permite visualizar todos os usuários do sistema com paginação. Requer permissão ADMIN_USERS. Útil para administradores monitorarem e gerenciarem contas.\n\n**Resposta esperada:** 200 OK com lista paginada de usuários"
          }
        },
        {
          "name": "Estatisticas de Seguranca (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/security/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "security",
                "stats"
              ]
            },
            "description": "**Obter estatísticas de segurança do sistema**\n\nEndpoint que fornece métricas e estatísticas de segurança, incluindo tentativas de login, bloqueios, taxas de sucesso e outras informações relevantes para análise de segurança. Requer permissão SECURITY_READ.\n\n**Resposta esperada:** 200 OK com estatísticas detalhadas de segurança"
          }
        },
        {
          "name": "Logs de Acesso (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/security/logs?page=1&per_page=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "security",
                "logs"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "50"
                }
              ]
            },
            "description": "**Obter logs de acesso e auditoria do sistema**\n\nEndpoint que fornece acesso aos logs de auditoria do sistema, incluindo tentativas de login, acessos, mudanças de perfil e outras atividades de segurança. Suporta filtros por usuário e paginação. Requer permissão SECURITY_VIEW_LOGS.\n\n**Resposta esperada:** 200 OK com logs de acesso paginados"
          }
        },
        {
          "name": "Estatisticas de Tokens (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/tokens/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "tokens",
                "stats"
              ]
            },
            "description": "**Obter estatísticas de refresh tokens e sessões**\n\nEndpoint que fornece métricas sobre o uso de refresh tokens, incluindo tokens ativos, expirados, rotacionados e estatísticas de uso por usuário. Requer permissão SECURITY_READ.\n\n**Resposta esperada:** 200 OK com estatísticas detalhadas de tokens"
          }
        },
        {
          "name": "Limpeza de Manutencao (Super Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/maintenance/cleanup",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "maintenance",
                "cleanup"
              ]
            },
            "description": "**Limpar dados expirados e realizar manutenção do sistema**\n\nEndpoint administrativo que executa tarefas de limpeza automática, incluindo remoção de sessões expiradas, logs antigos e dados temporários. Requer permissão ADMIN_FULL (super administrador).\n\n**Resposta esperada:** 200 OK com resultado da limpeza"
          }
        }
      ]
    },
    {
      "name": "Admin (MVP)",
      "item": [
        {
          "name": "Visao Geral do Sistema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Admin-Api-Key",
                "value": "{{admin_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/v1/admin/overview",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "admin",
                "overview"
              ]
            },
            "description": "Visao geral do sistema administrativo com status dos componentes principais"
          }
        },
        {
          "name": "Eventos do Sistema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-Admin-Api-Key",
                "value": "{{admin_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/v1/admin/events",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "admin",
                "events"
              ]
            },
            "description": "Lista os ultimos eventos do sistema (requer autenticacao admin)"
          }
        }
      ]
    },
    {
      "name": "Discovery",
      "item": [
        {
          "name": "Buscar Servicos por Nome",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/v1/discovery/services?name=abiss",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "v1",
                "discovery",
                "services"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "abiss",
                  "description": "Nome do servico a ser buscado"
                }
              ]
            },
            "description": "Busca servicos registrados no sistema de descoberta por nome"
          }
        }
      ]
    },
    {
      "name": "Seguranca Avancada",
      "item": [
        {
          "name": "Status ABISS",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/abiss/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "abiss",
                "status"
              ]
            },
            "description": "Status do sistema ABISS (Advanced Behavioral Intelligence Security System)"
          }
        },
        {
          "name": "Status NNIS",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/nnis/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "nnis",
                "status"
              ]
            },
            "description": "Status do sistema NNIS (Neural Network Intelligence System)"
          }
        }
      ]
    },
    {
      "name": "🔌 WebSockets",
      "item": [
        {
          "name": "WebSocket Principal",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/ws",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "ws"
              ]
            },
            "description": "Endpoint WebSocket principal para comunicação em tempo real"
          },
          "response": []
        },
        {
          "name": "WebSocket API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/ws",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "ws"
              ]
            },
            "description": "Endpoint WebSocket da API para funcionalidades específicas"
          },
          "response": []
        },
        {
          "name": "WebSocket Genérico",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/websocket",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "websocket"
              ]
            },
            "description": "Endpoint WebSocket genérico para testes e desenvolvimento"
          },
          "response": []
        },
        {
          "name": "WebSocket Test Node",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/ws/test_node",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "ws",
                "test_node"
              ]
            },
            "description": "Endpoint WebSocket para teste de conectividade de nós"
          },
          "response": []
        }
      ],
      "description": "Endpoints WebSocket para comunicação em tempo real. Use ferramentas como wscat ou Postman para testar conexões WebSocket."
    },
    {
      "name": "Seguranca Avancada",
      "item": [
        {
          "name": "Status do Sistema ABISS",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/abiss/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "abiss",
                "status"
              ]
            },
            "description": "**Obter status e saúde do sistema ABISS**\n\nEndpoint que retorna informações sobre o estado atual do sistema ABISS (Adaptive Behaviour Intelligence Security System), incluindo status de inicialização, thresholds configurados e contadores de padrões de ameaça.\n\n**Resposta esperada:** 200 OK com status completo do sistema ABISS"
          }
        },
        {
          "name": "Configuracao do Sistema ABISS",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/abiss/config",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "abiss",
                "config"
              ]
            },
            "description": "**Obter configuração atual do sistema ABISS**\n\nEndpoint que retorna a configuração completa do sistema ABISS, incluindo thresholds de bloqueio e monitoramento, whitelist de endpoints e parâmetros de aprendizado e memória.\n\n**Resposta esperada:** 200 OK com configuração completa do sistema ABISS"
          }
        },
        {
          "name": "Estatisticas do Sistema ABISS",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/abiss/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "abiss",
                "stats"
              ]
            },
            "description": "**Obter estatísticas e métricas do sistema ABISS**\n\nEndpoint que retorna estatísticas detalhadas sobre o funcionamento do sistema ABISS, incluindo total de requisições analisadas, requisições bloqueadas, taxa média de ameaça e contadores de IPs únicos monitorados.\n\n**Resposta esperada:** 200 OK com estatísticas completas do sistema ABISS"
          }
        },
        {
          "name": "Status do Sistema NNIS",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/nnis/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "nnis",
                "status"
              ]
            },
            "description": "**Obter status e saúde do sistema NNIS**\n\nEndpoint que retorna informações sobre o estado atual do sistema NNIS (Neural Network Immune System), incluindo saúde do sistema imune, contadores de células imunes e status de memória.\n\n**Resposta esperada:** 200 OK com status completo do sistema NNIS"
          }
        },
        {
          "name": "Detectar Antigenos (NNIS)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/nnis/detect-antigens",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "nnis",
                "detect-antigens"
              ]
            },
            "description": "**Detectar antígenos de ameaças usando o sistema NNIS**\n\nEndpoint que analisa dados de rede para detectar padrões de ameaça usando o sistema neural imune. O NNIS processa dados de tráfego e identifica possíveis ameaças baseadas em padrões aprendidos e reconhecimento de antígenos.\n\n**Payload:**\n```json\n{\n  \"traffic_pattern\": \"normal\",\n  \"connection_count\": 10,\n  \"data_volume\": 1024\n}\n```\n\n**Resposta esperada:** 200 OK com antígenos detectados"
          }
        },
        {
          "name": "Gerar Resposta Imune (NNIS)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/nnis/generate-response",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "nnis",
                "generate-response"
              ]
            },
            "description": "**Gerar resposta imune para uma ameaça específica**\n\nEndpoint que permite ao sistema NNIS gerar uma resposta imune personalizada para uma ameaça detectada. O sistema analisa os dados da ameaça e gera ações de resposta apropriadas baseadas em padrões aprendidos.\n\n**Payload:**\n```json\n{\n  \"threat_type\": \"sql_injection\",\n  \"confidence\": 0.8,\n  \"source\": \"192.168.1.100\"\n}\n```\n\n**Resposta esperada:** 200 OK com resposta imune gerada"
          }
        },
        {
          "name": "Inteligencia de Ameacas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/threat-intelligence",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "threat-intelligence"
              ]
            },
            "description": "**Obter inteligência de ameaças combinada dos sistemas ABISS e NNIS**\n\nEndpoint que consolida informações de inteligência de ameaças de ambos os sistemas de segurança, fornecendo uma visão unificada dos padrões de ameaça, respostas imunes e métricas de segurança em tempo real.\n\n**Resposta esperada:** 200 OK com inteligência consolidada de ameaças"
          }
        },
        {
          "name": "Testar Middleware de Seguranca",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/middleware/test",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "middleware",
                "test"
              ]
            },
            "description": "**Testar funcionalidade do middleware de segurança**\n\nEndpoint para testar e validar o funcionamento do middleware de segurança, permitindo simular requisições e verificar respostas de segurança, análise ABISS e validação de entrada.\n\n**Payload:**\n```json\n{\n  \"method\": \"POST\",\n  \"path\": \"/auth/login\",\n  \"headers\": {\"User-Agent\": \"Test\"},\n  \"body\": {\"username\": \"test\", \"password\": \"test123\"}\n}\n```\n\n**Resposta esperada:** 200 OK com resultado do teste"
          }
        },
        {
          "name": "Configuracao do Middleware",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/middleware/config",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "middleware",
                "config"
              ]
            },
            "description": "**Obter configuração atual do middleware de segurança**\n\nEndpoint que retorna a configuração completa do middleware de segurança, incluindo thresholds de ameaça, configurações de análise ABISS/NNIS e parâmetros de operação.\n\n**Resposta esperada:** 200 OK com configuração completa do middleware"
          }
        },
        {
          "name": "Simular Ataque",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/middleware/simulate-attack?attack_type=sql_injection",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "middleware",
                "simulate-attack"
              ],
              "query": [
                {
                  "key": "attack_type",
                  "value": "sql_injection"
                }
              ]
            },
            "description": "**Simular diferentes tipos de ataques para testar o middleware**\n\nEndpoint para testar a eficácia do middleware de segurança simulando diferentes tipos de ataques conhecidos. Útil para validação de segurança e testes de penetração controlados.\n\n**Tipos de ataque:** sql_injection, xss, command_injection, ddos_simulation\n\n**Resposta esperada:** 200 OK com resultado da simulação"
          }
        },
        {
          "name": "Estatisticas do Middleware",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/middleware/stats",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "middleware",
                "stats"
              ]
            },
            "description": "**Obter estatísticas abrangentes do middleware de segurança**\n\nEndpoint que retorna estatísticas detalhadas sobre o funcionamento do middleware de segurança, incluindo métricas de clientes, requisições analisadas, IPs bloqueados e status dos sistemas de segurança integrados.\n\n**Resposta esperada:** 200 OK com estatísticas completas do middleware"
          }
        },
        {
          "name": "Bloquear IP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/middleware/block-ip",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "middleware",
                "block-ip"
              ]
            },
            "description": "**Bloquear endereço IP específico**\n\nEndpoint administrativo que permite bloquear um endereço IP específico no sistema de segurança. O IP bloqueado será rejeitado por todas as rotas protegidas pelo middleware.\n\n**Payload:**\n```json\n{\n  \"ip_address\": \"192.168.1.100\",\n  \"reason\": \"Tentativa de ataque detectada\"\n}\n```\n\n**Resposta esperada:** 200 OK com confirmação do bloqueio"
          }
        },
        {
          "name": "Desbloquear IP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/middleware/unblock-ip",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "middleware",
                "unblock-ip"
              ]
            },
            "description": "**Desbloquear endereço IP previamente bloqueado**\n\nEndpoint administrativo que permite remover o bloqueio de um endereço IP, restaurando o acesso normal ao sistema. Útil para desbloqueios manuais após análise de segurança.\n\n**Payload:**\n```json\n{\n  \"ip_address\": \"192.168.1.100\"\n}\n```\n\n**Resposta esperada:** 200 OK com confirmação do desbloqueio"
          }
        },
        {
          "name": "Validar Entrada",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/security/validate-input",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "validate-input"
              ]
            },
            "description": "**Validar dados de entrada para ameaças de segurança**\n\nEndpoint que analisa dados de entrada em busca de padrões maliciosos, incluindo SQL injection, XSS, command injection e outras ameaças conhecidas. Retorna resultado da validação com dados sanitizados e score de confiança.\n\n**Payload:**\n```json\n{\n  \"input_data\": \"<script>alert('xss')</script>\",\n  \"context\": \"html\"\n}\n```\n\n**Resposta esperada:** 200 OK com resultado da validação"
          }
        },
        {
          "name": "Padroes de Validacao",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/validation-patterns",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "validation-patterns"
              ]
            },
            "description": "**Obter informações sobre padrões de validação utilizados**\n\nEndpoint que retorna informações detalhadas sobre os padrões de validação utilizados pelo sistema de validação de entrada, incluindo contadores de padrões por categoria e contextos de segurança suportados.\n\n**Resposta esperada:** 200 OK com informações sobre padrões de validação"
          }
        },
        {
          "name": "Relatorio de Seguranca",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security/security-report",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "security",
                "security-report"
              ]
            },
            "description": "**Gerar relatório abrangente de segurança**\n\nEndpoint que consolida informações de todos os sistemas de segurança em um relatório unificado, incluindo estatísticas do middleware, ABISS, NNIS e métricas de validação de entrada. Útil para análise de segurança e auditoria.\n\n**Resposta esperada:** 200 OK com relatório completo de segurança"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script executado antes de cada request",
          "console.log('Iniciando request para:', pm.request.url.toString());",
          "console.log('Metodo:', pm.request.method);",
          "console.log('Timestamp:', new Date().toISOString());",
          "",
          "// Log de variaveis de ambiente",
          "console.log('Base URL:', pm.environment.get('base_url') || pm.globals.get('base_url'));",
          "console.log('Admin API Key:', pm.environment.get('admin_api_key') || pm.globals.get('admin_api_key'));",
          "",
          "// Validacao de variaveis obrigatorias",
          "const baseUrl = pm.environment.get('base_url') || pm.globals.get('base_url');",
          "if (!baseUrl) {",
          "    console.warn('Aviso: base_url nao configurada');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Testes automaticos para todas as requisicoes",
          "pm.test('Status code nao e 500 (erro interno)', function () {",
          "    pm.expect(pm.response.code).to.not.equal(500);",
          "});",
          "",
          "pm.test('Tempo de resposta menor que 5 segundos', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Resposta tem Content-Type valido', function () {",
          "    const contentType = pm.response.headers.get('Content-Type');",
          "    if (contentType) {",
          "        pm.expect(contentType).to.match(/application\\/json|text\\/html|text\\/plain/);",
          "    }",
          "});",
          "",
          "// Teste para endpoints de admin",
          "const url = pm.request.url.toString();",
          "if (url.includes('/admin/')) {",
          "    pm.test('Endpoint admin respondeu adequadamente', function () {",
          "        pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 401, 403, 429]);",
          "    });",
          "}",
          "",
          "// Teste para rate limiting",
          "if (pm.response.code === 429) {",
          "    pm.test('Rate limiting ativo - resposta adequada', function () {",
          "        pm.expect(pm.response.code).to.equal(429);",
          "        console.log('Rate limit atingido - sistema funcionando corretamente');",
          "    });",
          "}",
          "",
          "// Teste para bloqueios de seguranca",
          "if (pm.response.code === 403) {",
          "    pm.test('Bloqueio de seguranca - resposta adequada', function () {",
          "        pm.expect(pm.response.code).to.equal(403);",
          "        console.log('Requisicao bloqueada por seguranca - sistema funcionando');",
          "    });",
          "}",
          "",
          "// Log detalhado da resposta para debug",
          "console.log('Status da resposta:', pm.response.status);",
          "console.log('Tempo de resposta:', pm.response.responseTime + 'ms');",
          "console.log('Tamanho da resposta:', pm.response.responseSize + ' bytes');",
          "",
          "// Salvar metricas para relatorio",
          "if (!pm.globals.get('testMetrics')) {",
          "    pm.globals.set('testMetrics', JSON.stringify([]));",
          "}",
          "",
          "const metrics = JSON.parse(pm.globals.get('testMetrics'));",
          "metrics.push({",
          "    url: pm.request.url.toString(),",
          "    method: pm.request.method,",
          "    status: pm.response.code,",
          "    responseTime: pm.response.responseTime,",
          "    timestamp: new Date().toISOString()",
          "});",
          "",
          "pm.globals.set('testMetrics', JSON.stringify(metrics));"
        ]
      }
    }
  ]
}